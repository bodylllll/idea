<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <typeAliases>
        <!--
            方式1：
                为指定的类分别起别名，别名的命名由我们自己来决定

                type：要为哪个domain起别名 填写包、类名称
                alias：别名的名字
        -->
       <!-- <typeAlias type="com.ljq.mybatis.domain.Student" alias="stu"/>-->

        <!--
            方式2：
                使用package标签起别名
                别名是为：Mybatis默认为我们去好的，命名不是由我们自己决定，
                别名为类名（类名的字母不区分大小写）
                虽然字母不区分大小写，但是我们还是要按照规定俗成的规则填写
                类名：首字母可以小写
            name：指定一个包结构，表示在该包下，所有的domain自动起好了别名
        -->
        <package name="com.ljq.mybatis03.domain"/>
    </typeAliases>
    <!--
        总结：
            （1）未来实际项目开发中如果公司需要使用起别名的机制，我们要使用批量起别名的
                方式
            （2）在市场上也有很多企业摒弃Mybatis起别名的机制
                公司会认为将domain写成全路径，可以有效的提供代码的可读性
    -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/test?useSSL=false&amp;serverTimezone=Hongkong&amp;characterEncoding=utf-8&amp;autoReconnect=true"/>
                <property name="username" value="root"/>
                <property name="password" value="123"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--
            方式1：
                使用resource属性：指定mapper映射文件
        -->
        <mapper resource="com/ljq/mybatis03/dao/StudentDao.xml"/>

        <!--
            方式2：
                使用class属性，找到dao层接口的全路径
        -->
  <!--      <mapper class="com.ljq.mybatis.dao.StudentDao"/>-->
        <!--
            方式3：
                批量注册
                name属性：指向dao层的包，表示在该dao包下，所有的映射文件自动注册
        -->
 <!--       <package name="com.ljq.mybatis.dao"/>-->
        <!--
            总结：
                未来实际项目开发中，我们一定是批量注册mapper映射文件
        -->
    </mappers>
</configuration>